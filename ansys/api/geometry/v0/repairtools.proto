// Copyright 2025, ANSYS Inc. Unauthorized use, distribution or duplication is prohibited.
syntax = "proto3";
package ansys.api.geometry.v0.repairtools;

import "ansys/api/dbu/v0/dbumodels.proto";
import "ansys/api/geometry/v0/models.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";


option csharp_namespace = "Ansys.Api.Geometry.V0.RepairTools";
option go_package = "ansys/api/geometry/v0";

service RepairTools{

  rpc FindInterference(FindInterferenceRequest) returns (FindInterferenceResponse);

  rpc FixInterference(FixInterferenceRequest) returns (FixInterferenceResponse);

  rpc FindSplitEdges(FindSplitEdgesRequest) returns (FindSplitEdgesResponse);

  rpc FixSplitEdges(FixSplitEdgesRequest) returns (FixSplitEdgesResponse);

  rpc FindExtraEdges(FindExtraEdgesRequest) returns (FindExtraEdgesResponse);

  rpc FixExtraEdges(FixExtraEdgesRequest) returns (FixExtraEdgesResponse);

  rpc FindInexactEdges(FindInexactEdgesRequest) returns (FindInexactEdgesResponse);

  rpc FixInexactEdges(FixInexactEdgesRequest) returns (FixInexactEdgesResponse);

  rpc FindShortEdges(FindShortEdgesRequest) returns (FindShortEdgesResponse);

  rpc FixShortEdges(FixShortEdgesRequest) returns (FixShortEdgesResponse);

  rpc FindStitchFaces(FindStitchFacesRequest) returns (FindStitchFacesResponse);

  rpc FixStitchFaces(FixStitchFacesRequest) returns (FixStitchFacesResponse);
  
  rpc FindMissingFaces(FindMissingFacesRequest) returns (FindMissingFacesResponse);

  rpc FixMissingFaces(FixMissingFacesRequest) returns (FixMissingFacesResponse);

  rpc FindDuplicateFaces(FindDuplicateFacesRequest) returns (FindDuplicateFacesResponse);

  rpc FixDuplicateFaces(FixDuplicateFacesRequest) returns (FixDuplicateFacesResponse);

  rpc FindSmallFaces(FindSmallFacesRequest) returns (FindSmallFacesResponse);

  rpc FixSmallFaces(FixSmallFacesRequest) returns (FixSmallFacesResponse);

  rpc FindGaps(FindGapsRequest) returns (FindGapsResponse);

  rpc FixGaps(FixGapsRequest) returns (FixGapsResponse);

  rpc FindSmallCurves(FindSmallCurvesRequest) returns (FindSmallCurvesResponse);

  rpc FixSmallCurves(FixSmallCurvesRequest) returns (FixSmallCurvesResponse);

  rpc FindCurveGaps(FindCurveGapsRequest) returns (FindCurveGapsResponse);
  
  rpc FixCurveGaps(FixCurveGapsRequest) returns (FixCurveGapsResponse);

  rpc FindDuplicateCurves(google.protobuf.Empty) returns (FindDuplicateCurvesResponse);

  rpc FixDuplicateCurves(FixDuplicateCurvesRequest) returns (FixDuplicateCurvesResponse);

  rpc FindAdjustMergeFaces(FindAdjustMergeFacesRequest) returns (FindAdjustMergeFacesResponse);

  rpc AdjustMergeFaces(AdjustMergeFacesRequest) returns (AdjustMergeFacesResponse);

  rpc FindAdjustSimplify(FindAdjustSimplifyRequest) returns (FindAdjustSimplifyResponse);

  rpc FixAdjustSimplify(FixAdjustSimplifyRequest) returns (FixAdjustSimplifyResponse);

  rpc FitCurves(FitCurvesRequest) returns (FitCurvesResponse);

  rpc InspectGeometry(InspectGeometryRequest) returns (InspectGeometryResponse);

  rpc RepairGeometry(RepairGeometryRequest) returns (RepairGeometryResponse);
  
  rpc FindAndFixExtraEdges(FindExtraEdgesRequest) returns (EnhancedRepairToolMessage);

  rpc FindAndFixSplitEdges(FindSplitEdgesRequest) returns (EnhancedRepairToolMessage);

  rpc FindAndFixShortEdges(FindShortEdgesRequest) returns (EnhancedRepairToolMessage);

  rpc FindAndSimplify(FindAdjustSimplifyRequest) returns (EnhancedRepairToolMessage);
}

message FindInterferenceRequest{
  repeated string bodies=1;
  optional google.protobuf.BoolValue cut_smaller_body=2; // default: false
}

message FindInterferenceResponse{
  repeated ansys.api.geometry.v0.FixInterferenceProblemArea result=1;
} 

message FixInterferenceRequest{
  google.protobuf.Int32Value interference_problem_area_id=1;
}

message FixInterferenceResponse{
  RepairToolMessage result=1;
}

message FindSplitEdgesRequest{
  repeated string bodies_or_faces=1;
  google.protobuf.DoubleValue angle=2;
  google.protobuf.DoubleValue distance = 3;
  bool comprehensive = 4;
}

message FindSplitEdgesResponse{
  repeated ansys.api.geometry.v0.SplitEdgeProblemArea result = 1;
}

message FixSplitEdgesRequest{
  google.protobuf.Int32Value split_edge_problem_area_id=1;
}

message FixSplitEdgesResponse{
  RepairToolMessage result = 1;
}

message FindExtraEdgesRequest{
  repeated string selection = 1;
  bool comprehensive = 2;
}

message FindExtraEdgesResponse{
  repeated ansys.api.geometry.v0.ExtraEdgeProblemArea result = 1;
}

message FixExtraEdgesRequest{
  google.protobuf.Int32Value extra_edge_problem_area_id=1;
}

message FixExtraEdgesResponse{
  RepairToolMessage result = 1;
}

message FindShortEdgesRequest{
  repeated string selection = 1;
  google.protobuf.DoubleValue max_edge_length=2; 
  bool comprehensive = 3;
}

message FindShortEdgesResponse{
  repeated ansys.api.geometry.v0.ShortEdgeProblemArea result = 1;
}

message FixShortEdgesRequest{
  google.protobuf.Int32Value short_edge_problem_area_id=1;
}

message FixShortEdgesResponse{
  RepairToolMessage result = 1;
}

message FindInexactEdgesRequest{
  repeated string selection = 1;
}

message FindInexactEdgesResponse{
  repeated ansys.api.geometry.v0.InexactEdgeProblemArea result = 1;
}

message FixInexactEdgesRequest{
  google.protobuf.Int32Value inexact_edge_problem_area_id=1;
}

message FixInexactEdgesResponse{
  RepairToolMessage result = 1;
}

message FindStitchFacesRequest{
  repeated string faces = 1;
  google.protobuf.DoubleValue maximum_distance =2; // default: 0.0001
  google.protobuf.BoolValue check_for_coincidence=3; // default: false
  google.protobuf.BoolValue allow_multiple_bodies =4; // default: false
  google.protobuf.BoolValue maintain_components=5; // default: false
}

message FindStitchFacesResponse{
  repeated ansys.api.geometry.v0.StitchFaceProblemArea result = 1;
}

message FixStitchFacesRequest{
  google.protobuf.Int32Value stitch_face_problem_area_id = 1;
}

message FixStitchFacesResponse{
  RepairToolMessage result = 1;
}

enum SolidifyFixMethodType{
  FILL = 0;
  PATCH_BLEND = 1;
  TRY_BOTH = 2;
}

message FindMissingFacesRequest{
  repeated string faces = 1;
  google.protobuf.DoubleValue angle=2;
  google.protobuf.DoubleValue distance = 3;
  oneof method
  {
    google.protobuf.NullValue null = 4;
    SolidifyFixMethodType  data =5;
  }  
  google.protobuf.BoolValue allow_multi_patch =6;
}

message FindMissingFacesResponse{
  repeated ansys.api.geometry.v0.MissingFaceProblemArea result = 1;
}

message FixMissingFacesRequest{
  google.protobuf.Int32Value missing_face_problem_area_id = 1;
}

message FixMissingFacesResponse{
  RepairToolMessage result = 1;
}

message  FindDuplicateFacesRequest{
  repeated string faces = 1;
  google.protobuf.DoubleValue max_gap = 2;
}

message FindDuplicateFacesResponse{
  repeated ansys.api.geometry.v0.DuplicateFaceProblemArea result = 1;
}

message  FixDuplicateFacesRequest{
  google.protobuf.Int32Value duplicate_face_problem_area_id = 1;
}

message FixDuplicateFacesResponse{
  RepairToolMessage result = 1;
}

message FindSmallFacesRequest{
  repeated string selection = 1;
  google.protobuf.DoubleValue area = 2;
  google.protobuf.DoubleValue width = 3;
}

message FindSmallFacesResponse{
  repeated ansys.api.geometry.v0.SmallFaceProblemArea result = 1;
}

message FixSmallFacesRequest{
  google.protobuf.Int32Value small_face_problem_area_id = 1;
}

message FixSmallFacesResponse{
  RepairToolMessage result = 1;
}

message FindGapsRequest{
  repeated ansys.api.dbu.v0.EntityIdentifier bodies = 1;
  google.protobuf.DoubleValue angle=2;
  google.protobuf.DoubleValue distance = 3;
  optional SolidifyFixMethodType fix_method = 4;
  google.protobuf.BoolValue allow_multi_patch = 5;
}

message FindGapsResponse{
  repeated ansys.api.geometry.v0.GapProblemArea result = 1;
}

message FixGapsRequest{
  google.protobuf.Int32Value gap_problem_area_id = 1;
}

message FixGapsResponse{
  RepairToolMessage result = 1;
}

message FindCurveGapsRequest{
  google.protobuf.DoubleValue distance = 1;
}

message FindCurveGapsResponse{
  repeated ansys.api.geometry.v0.CurveGapProblemArea result = 1;
}

message FixCurveGapsRequest{
  google.protobuf.Int32Value curve_gap_problem_area_id = 1;
  google.protobuf.DoubleValue distance = 2;
}

message FixCurveGapsResponse{
  RepairToolMessage result = 1;
}

message FindDuplicateCurvesResponse{
  repeated ansys.api.geometry.v0.DuplicateCurveProblemArea result = 1;
}

message FixDuplicateCurvesRequest{
  google.protobuf.Int32Value duplicate_curve_problem_area_id = 1;
}

message FixDuplicateCurvesResponse{
  RepairToolMessage result = 1;
}

message FindSmallCurvesRequest{
  google.protobuf.DoubleValue  max_curve_length = 1;
}

message FindSmallCurvesResponse{
  repeated ansys.api.geometry.v0.SmallCurveProblemArea result = 1;
}

message FixSmallCurvesRequest{
  google.protobuf.Int32Value small_curve_problem_area_id = 1;
}

message FixSmallCurvesResponse{
  RepairToolMessage result = 1;
}

message FindAdjustMergeFacesRequest{
  repeated ansys.api.geometry.v0.Face selection = 1;
  repeated ansys.api.geometry.v0.Face tangent_faces = 2;
  google.protobuf.BoolValue allow_multi_patch = 3;
  google.protobuf.BoolValue fail_if_can_fill = 4;
  google.protobuf.BoolValue enforce_closed_loop_check = 5;
}

message FindAdjustMergeFacesResponse{
  repeated ansys.api.geometry.v0.SplitEdgeProblemArea result = 1;
}

message AdjustMergeFacesRequest{
  repeated ansys.api.geometry.v0.Face selection = 1;
  repeated ansys.api.geometry.v0.Face tangent_faces = 2;
  google.protobuf.BoolValue allow_multi_patch = 3;
  google.protobuf.BoolValue fail_if_can_fill = 4;
  google.protobuf.BoolValue enforce_closed_loop_check = 5;
}

message AdjustMergeFacesResponse{
  bool result = 1;
}

message FindAdjustSimplifyRequest{
  repeated string selection = 1;
  bool comprehensive = 2;
}

message FindAdjustSimplifyResponse{
  repeated ansys.api.geometry.v0.AdjustSimplifyProblemArea result = 1;
}

message FixAdjustSimplifyRequest{
  google.protobuf.Int32Value adjust_simplify_problem_area_id = 1;
}

message FixAdjustSimplifyResponse{
  RepairToolMessage result = 1;
}

message FitCurvesRequest{
  ansys.api.dbu.v0.EntityIdentifier selection = 1;
  bool arcs = 2;
  bool lines = 3;
  bool splines = 4;
  bool tangentize = 5;
  double tolerance = 6;
}

message FitCurvesResponse{
  RepairToolMessage result = 1;
}

message InspectGeometryRequest {
  repeated ansys.api.dbu.v0.EntityIdentifier bodies = 1;
  optional InspectGeometryOptions options = 2;
}

message InspectGeometryResponse {
  repeated InspectGeometryResult issues_by_body = 1;
}

message RepairGeometryRequest {
  repeated ansys.api.dbu.v0.EntityIdentifier bodies = 1;
}

message RepairGeometryResponse {
  RepairToolMessage result = 1;
}