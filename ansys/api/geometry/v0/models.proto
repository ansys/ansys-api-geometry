// Copyright 2023, ANSYS Inc. Unauthorized use, distribution or duplication is prohibited.
syntax = "proto3";
package ansys.api.geometry.v0;

import "ansys/api/dbu/v0/dbumodels.proto";
import "google/protobuf/struct.proto";

option csharp_namespace = "Ansys.Api.Geometry.V0";

//
// The type of curve.
enum CurveType {
  CURVETYPE_UNKNOWN = 0;
  CURVETYPE_LINE = 1;
  CURVETYPE_CIRCLE = 2;
  CURVETYPE_ELLIPSE = 3;
  CURVETYPE_NURBS = 4;
  CURVETYPE_PROCEDURAL = 5;
}

//
// The type of surface.
enum SurfaceType {
  SURFACETYPE_UNKNOWN = 0;
  SURFACETYPE_PLANE = 1;
  SURFACETYPE_CYLINDER = 2;
  SURFACETYPE_CONE = 3;
  SURFACETYPE_TORUS = 4;
  SURFACETYPE_SPHERE = 5;
  SURFACETYPE_NURBS = 6;
  SURFACETYPE_PROCEDURAL = 7;
}

//
// The type of collision.
enum CollisionType { 
  COLLISIONTYPE_NONE=0;
  COLLISIONTYPE_TOUCH=1;
  COLLISIONTYPE_INTERSECT=2;
  COLLISIONTYPE_CONTAINED=3;
  COLLISIONTYPE_CONTAINEDTOUCH=4;
}

//
// The fill style type for a body.
enum BodyFillStyle { 
  BODYFILLSTYLE_DEFAULT=0;
  BODYFILLSTYLE_OPAQUE=1;
  BODYFILLSTYLE_TRANSPARENT=2;
}

//
// A design curve.
message Curve{
  string id = 1;
  string owner_name = 2;
  double length = 3;
  repeated Point points = 4;
}

message CurveGeometry {
  Point origin = 1;
  double radius = 2;
  double major_radius = 3;
  double minor_radius = 4;
  Direction direction = 5;
  Direction reference = 6;
  Direction axis = 7;
  NurbsCurve nurbs_curve = 8;
}

message TrimmedCurve {
  CurveGeometry curve = 1;
  Point start = 2;
  Point end = 3;
  double interval_start = 4;
  double interval_end = 5;
  double length = 6;
}

//
// A edge.
message Edge{
  string id = 1;
  CurveType curve_type = 10;
  string owner_name = 11;
  string export_id = 12;
  double length = 13;
  string owner_id = 14;
  bool is_reversed = 15;
}

//
// A face.
message Face{
  string id = 1;
  SurfaceType surface_type = 10;
  string owner_name = 11;
  string export_id = 12;
  double area = 13;
  bool is_reversed = 14;
}
//
// A mesh.
message Mesh{
  string id = 1;
  string name=2;
}

//
// A body.
message Body{
  string id = 1;
  string name = 2;
  bool can_suppress = 3;
  bool is_deleted = 4;
  bool is_suppressed = 5;
  Matrix transform_to_master = 6;
  BodyMasterNullable master = 7;
  string master_id = 8;
  string parent_id = 9;
  bool is_surface = 10;
}

//
// A nullable body master.
message BodyMasterNullable{
  oneof kind 
  {
    google.protobuf.NullValue null = 1;
    BodyMaster props = 2;
  }
}

//
// A body master.
message BodyMaster {
  string update_state = 6;
  map< string, string > text_attributes = 7;
  map< string, double > number_attributes = 8;
  Material material = 9;
  Material surface_material = 10;
  Shape shape = 11;
}

//
// The shape.
message Shape {
  bool is_surface_body = 1;
  double surface_area = 2;
  double volume = 3;
  Direction bounding_box_size = 4;
}

//
// A component.
message Component{
  string id = 1;
  string name = 2;
  Part part_occurrence = 3;
  Matrix placement =4;
  string master_id=5;
  string parent_id=6;
  Part part_master=7;
  string display_name=8;
  string instance_name=9;
}

//
// A part.
message Part{
  string id = 1;
  string name = 2;
}

//
// A named selection.
message NamedSelection {
  string id = 1;
  string name = 2;
  repeated ansys.api.dbu.v0.EntityIdentifier selection=3;
}

//
// A 3D coordinate system.
message CoordinateSystem{
  string id=1;
  string name=2;
  Frame frame = 3;
}

//
// A 3D point.
message Point {
  double x = 1;
  double y = 2;
  double z = 3;
}

//
// A 3D direction.
message Direction {
  double x = 1;
  double y = 2;
  double z = 3;
}


//
// A 3D box.
message Box {
  Point min = 1;
  Point max = 2;
  Point center = 3;
}

//
// A homogeneous 3D transformation matrix.
// The matrix is a pre-multiplication transformation. 
// The rotation is in m00->m22 and contains no scaling in its leading diagonal.
// The translation is m03/m33, m13/m33, m23/m33.
// The uniform scale is 1/m33.
message Matrix{
  double m00 = 1;
  double m01 = 2;
  double m02 = 3;
  double m03 = 4;
  double m10 = 5;
  double m11 = 6;
  double m12 = 7;
  double m13 = 8;
  double m20 = 9;
  double m21 = 10;
  double m22 = 11;
  double m23 = 12;
  double m30 = 13;
  double m31 = 14;
  double m32 = 15;
  double m33 = 16;
}

//
// ShrinkWrapOptions is used to specify ShrinkWrap method in the Facet Tools. 
message ShrinkWrapOptions {
  double size =2;
  bool keep_original_bodies =3;
  bool preserve_features =4;
  double angle_tolerance =5;
  bool secondary_size_enabled =6;
  double secondary_size = 7;
  bool max_size_enabled =8;
  double max_size = 9;
  double curvature_angle =10;
}

message FixInterferenceProblemArea {
  int32 id = 1;
  repeated string body_monikers = 2;
}

message SplitEdgeProblemArea {
  int32 id = 1;    
  repeated string edge_monikers  = 2;
}

message FixSplitEdgeOptions {
  double max_edge_length  = 1;
  double min_edge_angle  = 2;
}

message ExtraEdgeProblemArea {
  int32 id = 1;
  repeated string edge_monikers = 2;
}

message InexactEdgeProblemArea {
  int32 id = 1;
  repeated string edge_monikers = 2;
}

message ShortEdgeProblemArea {
  int32 id = 1;
  repeated string edge_monikers = 2;
}

message DuplicateFaceProblemArea {
  int32 id = 1;
  repeated string face_monikers = 2;
}

message MissingFaceProblemArea {
  int32 id = 1;
  repeated string edge_monikers = 2;
}

message SmallFaceProblemArea {
  int32 id = 1;
  repeated string face_monikers = 2;
}

message StitchFaceProblemArea {
  int32 id = 1;
  repeated string body_monikers = 2;
}

message CurveGapProblemArea {
  int32 id = 1;
  repeated string curve_point_monikers = 2;
}

message DuplicateCurveProblemArea {
  int32 id = 1;
  repeated string curve_point_monikers = 2;
}

message SmallCurveProblemArea {
  int32 id = 1;
  repeated ansys.api.dbu.v0.EntityIdentifier curve_monikers = 2;
}

message AdjustSimplifyProblemArea {
  int32 id = 1;
  repeated string body_monikers = 2;
}

message GapProblemArea {
  int32 id = 1;
  repeated ansys.api.dbu.v0.EntityIdentifier edge_monikers = 2;
}


message RepairToolMessage {
  bool success = 1;
  repeated string created_bodies_monikers = 2;
  repeated string modified_bodies_monikers = 3;
  repeated string deleted_bodies_monikers = 4;
}


message Material{
  string name=1;
  repeated MaterialProperty material_properties=2;
}

message MaterialProperty {
  string id=1;
  string display_name=2;
  double value=3;
  string units=4;
}


message Frame {
  Point origin = 1;
  Direction dir_x = 2;
  Direction dir_y = 3;
  Direction dir_z = 4;
}

message Plane {
  Frame frame = 1;
}

message DatumPlane {
  ansys.api.dbu.v0.EntityIdentifier id = 1;
  Plane plane = 2;
  string name = 3;
  bool is_suppressed = 4;
  bool is_deleted = 5;
  bool can_suppress = 6;
  ansys.api.dbu.v0.EntityIdentifier master_id = 7;
  ansys.api.dbu.v0.EntityIdentifier parent_id = 8;
  repeated Curve curves = 9;
}

message Line {
  Point start=1;
  Point end=2;
}

message Circle {
  Point center=1;
  double radius=2;
}

message Arc {
  Point center=1;
  Point start=2;
  Point end=3;
  Direction axis=4;
}

message Ellipse {
  Point center=1;
  double majorradius=2;
  double minorradius=3;
  double angle=4;
}

message Polygon {
  Point center=1;
  double radius=2;
  int32 numberofsides=3;
  double angle=4;
}

message Geometries {
  repeated Point points = 1;
  repeated Line lines = 2;
  repeated Arc arcs = 3;
  repeated Circle circles = 4;
  repeated Ellipse ellipses = 5;
  repeated Polygon polygons = 6;
}

message Loop {
  string type=1;
  double length=2;
  Box bounding_box=3;
  repeated string edges=4;
}

enum ShareType {
  SHARETYPE_NONE=0;
  SHARETYPE_SHARE=1;
  SHARETYPE_MERGE=2;
  SHARETYPE_GROUPS=3;
}

enum MidSurfaceOffsetType {
  MIDSURFACEOFFSETTYPE_MIDDLE=0;
  MIDSURFACEOFFSETTYPE_TOP=1;
  MIDSURFACEOFFSETTYPE_BOTTOM=2;
  MIDSURFACEOFFSETTYPE_VARIABLE=3;
  MIDSURFACEOFFSETTYPE_CUSTOM=4;
}

enum OffsetMode {
  OFFSETMODE_IGNORE_RELATIONSHIPS=0;
  OFFSETMODE_MOVE_FACES_TOGETHER=1;
  OFFSETMODE_MOVE_FACES_APART=2;
}

enum ExtrudeType {
  EXTRUDETYPE_NONE = 0;
  EXTRUDETYPE_ADD = 1;
  EXTRUDETYPE_CUT = 2;
  EXTRUDETYPE_FORCE_ADD = 3;
  EXTRUDETYPE_FORCE_CUT = 4;
  EXTRUDETYPE_FORCE_INDEPENDENT = 5;
  EXTRUDETYPE_FORCE_NEW_SURFACE = 6;
}

//
// Object type descriptor
enum EntityType{
  PART = 0;
  COMPONENT = 1;
  BODY = 2;
  NAMED_SELECTION = 3;
}

message EntitiesCollection{
  repeated Curve curves=1;
  repeated Edge edges=2;
  repeated Face faces=3;
  repeated Body bodies=4;
}

message Tessellation {
  repeated double vertices = 1;
  repeated int32 faces = 2;
  int32 facecolor = 3;
}

//
// The type of segment.
enum SegmentType {
  SURFACETYPE_LINE = 0;
  SURFACETYPE_ARC = 1;
  SURFACETYPE_CIRCLE = 2;
}

message UpdateState {
  int32 state=1;
}

message Vertex {
  Point position = 1;
  repeated Edge edges = 2;
}
message TrimmedCurveList {
  repeated TrimmedCurve curves = 1;
}

message SpotWeld {
  map<string, Point> weld_points = 1;
}

message Weld {
  repeated TrimmedCurveList geometry = 1;
  string display_name = 2;
  double length = 3;
  double volume = 4;
  double mass = 5;
  double time = 6;
  double rod_length = 7;
  bool is_intermittent = 8;
  int32 sequence_id = 9;
  double size1 = 10;
  double size2 = 11;

  // This data only exists if the weld is intermittent
  bool is_angular = 12;
  bool is_at_center = 13;
  double intermittent_length = 14;
  int32 number_of_welds = 15;
  double pitch = 16;
}

message BeamProperties {
  double area = 1;
  double centroid_x = 2;
  double centroid_y = 3;
  double warping_constant = 4;
  double ixx = 5;
  double ixy = 6;
  double iyy = 7;
  double torsional_constant = 8;
  double shear_center_x = 9;
  double shear_center_y = 10;
}

message BeamCrossSectionInfo {
  int32 section_anchor = 1;
  double section_angle = 2;
  Frame section_frame = 3;
  repeated TrimmedCurveList section_profile = 4;
}

message CurveEvaluation {
  double curvature = 1;
  Direction derivative = 2;
  Direction derivative2 = 3;
  double param = 4;
  Point point = 5;
  Direction tangent = 6;
}

message SurfaceEvaluation {
  Direction derivative_u = 1;
  Direction derivative_uu = 2;
  Direction derivative_uv = 3;
  Direction derivative_v = 4;
  Direction derivative_vv = 5;
  double max_curvature = 6;
  Direction max_curvature_direction = 7;
  double min_curvature = 8;
  Direction min_curvature_direction = 9;
  Direction normal = 10;
  double param_u = 11;
  double param_v = 12;
  Point point = 13;
}

message Surface {
  Point origin = 1;
  double radius = 2;
  double half_angle = 3;
  double major_radius = 4;
  double minor_radius = 5;
  Direction reference = 6;
  Direction axis = 7;
}

message TrimmedSurface {
  Surface surface = 1;
  SurfaceType type = 2;
  double u_min = 3;
  double u_max = 4;
  double v_min = 5;
  double v_max = 6;
}

message Gap {
  double distance = 1;
}

message NurbsCurve {
  repeated ControlPoint control_points = 1;
  NurbsData nurbs_data = 2;
  bool is_rational = 3;
  Parameterization parameterization = 4;
}

message NurbsData{
  int32 degree = 1;
  bool is_closed = 2;
  bool is_periodic = 3;
  repeated Knot knots = 4;
  int32 order = 5;
}

message Knot{
  int32 multiplicity = 1;
  double parameter = 2;
}

message ControlPoint {
  Point position = 1;
  double weight = 2;
}

message Parameterization{
  ParameterizationBounds bounds = 1;
  ParameterizationForm form = 2;
}

message ParameterizationBounds {
  bool infinite_start = 1;
  double start = 2;
  bool infinite_end = 3;
  double end = 4;
}

enum ParameterizationForm {
  OPEN = 0;
  CLOSED = 1;
  PERIODIC = 2;
}

enum DraftSide {
  DRAFTSIDE_NO_SPLIT = 0;
  DRAFTSIDE_THIS = 1;
  DRAFTSIDE_OTHER = 2;
  DRAFTSIDE_BOTH = 3;
}

//
// The type of a fill pattern.
enum FillPatternType { 
  FILLPATTERNTYPE_GRID = 0;
  FILLPATTERNTYPE_OFFSET = 1;
  FILLPATTERNTYPE_SKEWED = 2;
}

//
// The type of a pattern modification.
enum PatternModificationType {
  PATTERNMODIFICATIONTYPE_PRIMARY_COUNT_PRESERVE_SPACING = 0;
  PATTERNMODIFICATIONTYPE_PRIMARY_COUNT_PRESERVE_OVERALL = 1;
  PATTERNMODIFICATIONTYPE_PRIMARY_COUNT_PLUS_PRESERVE_SPACING = 2;
  PATTERNMODIFICATIONTYPE_PRIMARY_COUNT_PLUS_PRESERVE_OVERALL = 3;
  PATTERNMODIFICATIONTYPE_PRIMARY_COUNT_MINUS_PRESERVE_SPACING = 4;
  PATTERNMODIFICATIONTYPE_PRIMARY_COUNT_MINUS_PRESERVE_OVERALL = 5;
  PATTERNMODIFICATIONTYPE_PRIMARY_OVERALL_DIMENSION = 6;
  PATTERNMODIFICATIONTYPE_PRIMARY_SPACING_DIMENSION = 7;
  PATTERNMODIFICATIONTYPE_SECONDARY_COUNT_PRESERVE_SPACING = 8;
  PATTERNMODIFICATIONTYPE_SECONDARY_COUNT_PRESERVE_OVERALL = 9;
  PATTERNMODIFICATIONTYPE_SECONDARY_COUNT_PLUS_PRESERVE_SPACING = 10;
  PATTERNMODIFICATIONTYPE_SECONDARY_COUNT_PLUS_PRESERVE_OVERALL =11;
  PATTERNMODIFICATIONTYPE_SECONDARY_COUNT_MINUS_PRESERVE_SPACING = 12;
  PATTERNMODIFICATIONTYPE_SECONDARY_COUNT_MINUS_PRESERVE_OVERALL = 13;
  PATTERNMODIFICATIONTYPE_SECONDARY_OVERALL_DIMENSION = 14;
  PATTERNMODIFICATIONTYPE_SECONDARY_SPACING_DIMENSION = 15;
  PATTERNMODIFICATIONTYPE_CIRCULAR_RADIUS = 16;
}

enum InspectGeometryMessageType {
  INSPECT_GEOMETRY_UNKNOWN = 0;
  INSPECT_GEOMETRY_INFORMATION = 1;
  INSPECT_GEOMETRY_WARNING = 2;
  INSPECT_GEOMETRY_ERROR = 3;
}

enum InspectGeometryLevel {
  COMPLETE = 0;
  VALIDATE = 1;
  SANITY = 2;
}

enum InspectGeometryMessageId {
  INSPECT_GEOMETRY_ID_UNKNOWN= 0;
  NONE= 1;
  NOERROR= 2;
  ERROR_BODYTOPOLOGY= 3;
  ERROR_INSIDEOUTBODY= 4;
  ERROR_GENERALBODY= 5;
  ERROR_FACETOPOLOGY= 6;
  ERROR_FACELOOP= 7;
  ERROR_FACEGEOMETRY= 8;
  ERROR_FACEEDGEGEOMETRY= 9;
  ERROR_EDGEGEOMETRY= 10;
  ERROR_EDGENONMANIFOLD= 11;
  ERROR_EDGETOPOLOGY= 12;
  ERROR_VERTEX= 13;
  ERROR_VERTEXNONMANIFOLD= 14;
  ERROR_MESHSELFINTERSECTS= 15;
  WARNING_MULTIPLESHELLS= 16;
  ERROR_MESHISOPEN= 17;
  ERROR_MESHISNONMANIFOLD= 18;
  UNKNOWN_FACE_ERROR= 19;
  UNKNOWN_EDGE_ERROR= 20;
  INTERNAL_ERROR= 21;
  ERROR_FACEDISPLAY= 22;
  INFO_SLIVERFACE= 23;
  INFO_SLIVEREDGE= 24;
  ERROR_FACEINTERSECTION= 25;
  ERROR_FACESELFINTERSECTINGTOPOLOGY= 26;
  ERROR_FACEFACEINTERSECTION= 27;
  ERROR_EDGEOFFINEXACT= 28;
  ERROR_EDGESELFINTERSECTINGTOPOLOGY= 29;
  ERROR_MESHINCONSISTENTORIENTATION= 30;
  WARNING_GEOMETRYNONG1= 31;
  WARNING_GEOMETRYSELFINTERSECTS= 32;
  WARNING_GEOMETRYCOLLAPSED= 33;
  WARNING_LOOPISNOTCLOSEDPROPERLY= 34;
  WARNING_CURVEISNOTCLOSEDPROPERLY= 35;
  WARNING_SURFACEISNOTCLOSEDPROPERLY= 36;
  WARNING_MESHHASFOLDOVERS= 37;
  ERROR_MESH= 38;
  ERROR_NOGEOMETRY= 39;
  VERTEXOVERLAP = 40;
}

message InspectGeometryOptions {
  InspectGeometryLevel level = 1;
  int32 max_number_of_issues = 2;
  bool check_self_intersections = 3;
  bool find_g1_discontinuities = 4;
  double sliver_edge_tolerance = 5;
  double sliver_face_tolerance = 6;
}

message InspectGeometryResultIssue
{
  InspectGeometryMessageType message_type = 1;
  InspectGeometryMessageId message_id = 2;
  repeated IssueEntityAndType issue_entities_and_type = 3;
  string message = 4;
  optional double scalar_value = 5;
}

message InspectGeometryResult {
  ansys.api.dbu.v0.EntityIdentifier body = 1;
  repeated InspectGeometryResultIssue issues = 2;
}

message IssueEntityAndType {
  ansys.api.dbu.v0.EntityIdentifier entity_id = 1;
  string entity_type = 2;
}